from bs4 import BeautifulSoup
import requests

url = "http://" + 'www.fishpond.co.nz/Books/Fiction_Literature'
r = requests.get(url)
data = r.text
soup = BeautifulSoup(r.content, "lxml")


productNameResults = []
isbnResults = []
publishingDateResults = []
normalPriceResults = []
salePriceResults = []
savingsResults = []
photoLinkResults = []

class webScraping(object):

    def productName(self):
        global productNameResults
        for productName in soup.find_all("a", {"class": "blue_link fn url"}):
            productNameResults.append(productName.text)
        print("Product name: ", productNameResults)
        return productNameResults


    def isbn(self):
        global isbnResults
        for isbn in soup.find_all("input", {"name": "barcode"}):
            isbnResults.append(isbn['value'])
        print("ISBN:  ", isbnResults)
        return isbnResults


    def publishingDate(self):
        global publishingDateResults
        for publishingDate in soup.find_all("div",
                                         {"class": "productSearch-metainfo"}):
         publishingDateResults.append(publishingDate.text.split(',', 1)[-1])
        print('Publishing Date: ', publishingDateResults)
        return publishingDateResults


    def normalPrice(self):
        global normalPriceResults
        for normalPrice in soup.find_all('s'):
            normalPriceResults.append(normalPrice.text[1:])
        print('Normal Price: ', normalPriceResults)
        return normalPriceResults


    def salePrices(self):
        global salePriceResults
        for salePrice in soup.find_all("span", {"class": "productSpecialPrice"}):
            salePriceResults.append(salePrice.text[1:])
        print('Sale Price: ', salePriceResults)
        return salePriceResults


    def savingTotal(self):
        global savingsResults
        for savings in soup.find_all("span", {"class": "you_save"}):
            savingsResults.append(savings.text[-4:-2])
        print('Savings Price: ', savingsResults)
        return savingsResults


    def photoLink(self):
        global photoLinkResults
        for photoLink in soup.find_all("img", {"class": "photo"}):
            photoLinkResults.append(photoLink['src'])
        print('Product Photo: ', photoLinkResults)
        return photoLinkResults
